<% 
let result = {
    intgRefId: data.data.doc_id.toString(), 
    gvJournalNo: data.data.doc_no, 
    gvJournalDt: data.data.created_at, 
    transactionSiteCode: data.data.ref_store_code, 
    grossAmount: data.data.cum_gift_value,
    discountAmount: data.data.cum_gift_value - data.data.subtotal,
    netAmount: data.data.total,
    remarks: "", 
    tenderDetails: [
    data.data.mop_details.map(item=>({
        tenderId: parseFloat(item.mop_amount) > 0 ? parseInt(item.ref_mop_code) : null, 
        amount: item.mop_amount, 
        remarks: "",
        refNo: item.mop_transaction_id, 
        refDateTime: item.created_at,
        additionalDetails1: "",
        additionalDetails2: "",
        additionalDetails3: "",
        additionalDetails4: ""
    }))
    ]
  

};
if (parseInt(data.data.total) == 0)
    delete result.tenderDetails; 
%>


<%- JSON.stringify(result)%>





### Required Key Assignments

// Source Data -> Target Field

// Root Level
ref_store_code -> siteId
store_active_date -> openingDate // Minus 1 day from store_active_date
ref_stock_point_code -> stockpointId

// Item Level (inside opening_stock_items array)

ref_sku_code -> itemId
quantity -> quantity
supply_price -> rate // Converted to float with 3 decimals




### Required Key Assignments
````javascript
// Source Data -> Target Field

// Root Level
ref_store_code -> siteId
store_active_date -> openingDate // Minus 1 day from store_active_date
ref_stock_point_code -> stockpointId

// Item Level (inside opening_stock_items array)
ref_sku_code -> itemId
quantity -> quantity
supply_price -> rate // Converted to float with 3 decimals
````